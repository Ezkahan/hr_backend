extend type Query {
    countries(orderBy: _ @orderBy(columns: ["id"])): [Country!]!
        @paginate
        @guard
    areas(orderBy: _ @orderBy(columns: ["id"])): [Area!]! @paginate @guard
    towns(orderBy: _ @orderBy(columns: ["id"])): [Town!]! @paginate @guard
    addresses(orderBy: _ @orderBy(columns: ["id"])): [Address!]!
        @paginate
        @guard
}

extend type Mutation {
    addCountry(name_ru: String!, name_en: String!): Country
        @guard
        @field(resolver: "App\\GraphQL\\Mutations\\CountryMutator@store")

    updateCountry(id: ID!, name_ru: String!, name_en: String!): Country
        @guard
        @field(resolver: "App\\GraphQL\\Mutations\\CountryMutator@update")

    deleteCountry(id: ID!): String
        @guard
        @field(resolver: "App\\GraphQL\\Mutations\\CountryMutator@delete")
}

type Country {
    id: ID!
    name: Translatable!
}

type Area {
    id: ID!
    name: String!
    country: Country @belongsTo
}

type Town {
    id: ID!
    name: String!
    area: Area @belongsTo
}

type Address {
    id: ID!
    address: String
    district: String
    status: String
    country: Country @belongsTo
    town: Town @belongsTo
    area: Area @belongsTo
}

type AddressType {
    id: ID!
    name: String
}
